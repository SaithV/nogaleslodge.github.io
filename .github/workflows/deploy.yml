name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Enable corepack
        run: corepack enable

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # Do NOT set cache unless a lockfile exists (we handle that below)

      - name: Detect package manager + lockfile
        id: detect
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "pm=pnpm" >> $GITHUB_OUTPUT
            echo "lock=true" >> $GITHUB_OUTPUT
          elif [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            echo "pm=npm" >> $GITHUB_OUTPUT
            echo "lock=true" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "pm=yarn" >> $GITHUB_OUTPUT
            echo "lock=true" >> $GITHUB_OUTPUT
          else
            echo "pm=npm" >> $GITHUB_OUTPUT
            echo "lock=false" >> $GITHUB_OUTPUT
          fi
          echo "Detected pm=${{ steps.detect.outputs.pm }}, lock=${{ steps.detect.outputs.lock }}"

      # Optional caching ONLY if a lockfile exists (setup-node supports cache)
      - name: Enable cache (pnpm)
        if: steps.detect.outputs.pm == 'pnpm' && steps.detect.outputs.lock == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable cache (npm)
        if: steps.detect.outputs.pm == 'npm' && steps.detect.outputs.lock == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Enable cache (yarn)
        if: steps.detect.outputs.pm == 'yarn' && steps.detect.outputs.lock == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      # Installs
      - name: Install deps (pnpm)
        if: steps.detect.outputs.pm == 'pnpm'
        run: |
          corepack prepare pnpm@8 --activate
          if [ "${{ steps.detect.outputs.lock }}" = "true" ]; then pnpm i --frozen-lockfile; else pnpm i; fi

      - name: Install deps (npm)
        if: steps.detect.outputs.pm == 'npm'
        run: |
          if [ "${{ steps.detect.outputs.lock }}" = "true" ]; then npm ci; else npm install; fi

      - name: Install deps (yarn)
        if: steps.detect.outputs.pm == 'yarn'
        run: |
          if [ "${{ steps.detect.outputs.lock }}" = "true" ]; then yarn install --frozen-lockfile; else yarn install; fi

      # Build
      - name: Build
        run: |
          if [ "${{ steps.detect.outputs.pm }}" = "pnpm" ]; then pnpm build;
          elif [ "${{ steps.detect.outputs.pm }}" = "yarn" ]; then yarn build;
          else npm run build; fi

      # SPA fallback
      - name: Add SPA fallback
        run: cp dist/index.html dist/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
